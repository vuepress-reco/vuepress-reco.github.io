import{_ as s,c as a,a as n,b as o,d as i,e as l,r as c,o as r}from"./app-DXyB3U1V.js";const p={},d={href:"https://github.com/vuepress-reco/vuepress-theme-reco",target:"_blank",rel:"noopener noreferrer"};function m(u,e){const t=c("ExternalLinkIcon");return r(),a("div",null,[e[5]||(e[5]=n("p",null,"Welcome to contribute code to the reco theme!",-1)),e[6]||(e[6]=n("h2",{id:"initialization",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#initialization"},[n("span",null,"Initialization")])],-1)),n("p",null,[e[1]||(e[1]=i("First, you need to fork a ")),n("a",d,[e[0]||(e[0]=i("reco theme repository")),l(t)]),e[2]||(e[2]=i(", clone it locally, and make sure that ")),e[3]||(e[3]=n("code",null,"pnpm",-1)),e[4]||(e[4]=i(" is installed locally."))]),e[7]||(e[7]=o(`<p>After the above preparations are completed, go to the project folder and execute the following commands:</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># Install</span></span>
<span class="line"><span class="token function">pnpm</span> <span class="token function">install</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># Compile</span></span>
<span class="line"><span class="token function">pnpm</span> build</span>
<span class="line"></span>
<span class="line"><span class="token comment"># Start</span></span>
<span class="line"><span class="token function">pnpm</span> dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>At this time, the project has been started, and you can test your function in <code>example</code>. Make sure that your code has been tested in detail and passed the <code>pnpm example:build</code> command. After the function test, you must synchronize the documentation.</p><h2 id="git-commit-specification" tabindex="-1"><a class="header-anchor" href="#git-commit-specification"><span>Git commit specification</span></a></h2><p>To submit a commit, please use the <code>pnpm commit</code> command to submit code in strict accordance with the specifications, and the commit information must be in English.</p><h2 id="git-pr-specification" tabindex="-1"><a class="header-anchor" href="#git-pr-specification"><span>Git PR specification</span></a></h2><p>The PR title is simple and clear, the PR details should describe the content you submitted in detail, and stickers if necessary, and the PR information must be in English.</p>`,7))])}const f=s(p,[["render",m]]),b=JSON.parse('{"path":"/en/docs/guide/contribute.html","title":"Contribute","lang":"en-US","frontmatter":{"title":"Contribute","date":"2022-08-06T22:37:36.000Z"},"headers":[{"level":2,"title":"Initialization","slug":"initialization","link":"#initialization","children":[]},{"level":2,"title":"Git commit specification","slug":"git-commit-specification","link":"#git-commit-specification","children":[]},{"level":2,"title":"Git PR specification","slug":"git-pr-specification","link":"#git-pr-specification","children":[]}],"git":{"createdTime":1747990935000,"updatedTime":1747990935000,"contributors":[{"name":"三人","username":"","email":"stwangcq@163.com","commits":1}]},"filePathRelative":"en/docs/guide/contribute.md"}');export{f as comp,b as data};
