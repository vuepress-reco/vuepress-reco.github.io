import{_ as l,c as i,a as s,b as p,d as a,e as t,r as o,o as r}from"./app-DXyB3U1V.js";const c={},u={href:"https://www.lasy.site/views/%E5%89%8D%E7%AB%AF/%E4%BD%BF%E7%94%A8%20GitHub%20Actions%20%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2.html",target:"_blank",rel:"noopener noreferrer"},d={href:"https://help.github.com/en/actions/configuring-and-managing-workflows/creating-and-storing-encrypted-secrets",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/xyyolab/blog/blob/master/.github/workflows/main.yml",target:"_blank",rel:"noopener noreferrer"},k={class:"custom-container tip"},g={href:"https://github.com/xyyolab",target:"_blank",rel:"noopener noreferrer"},b={href:"https://blog.xyyolab.com",target:"_blank",rel:"noopener noreferrer"};function v(h,n){const e=o("ExternalLinkIcon");return r(),i("div",null,[n[18]||(n[18]=s("h2",{id:"如何在-github-actions-时使用-secretkey",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#如何在-github-actions-时使用-secretkey"},[s("span",null,"如何在 GitHub Actions 时使用 secretKey")])],-1)),n[19]||(n[19]=s("h3",{id:"问题",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#问题"},[s("span",null,"问题")])],-1)),s("p",null,[n[1]||(n[1]=a("当我参考")),s("a",u,[n[0]||(n[0]=a("这篇")),t(e)]),n[2]||(n[2]=a("，使用 ")),n[3]||(n[3]=s("code",null,"Github Action",-1)),n[4]||(n[4]=a(" 自动部署的时候发现要使用 Secret Key 去使用 ")),n[5]||(n[5]=s("code",null,"VSSUE",-1)),n[6]||(n[6]=a(" 评论功能，我就犯愁了。"))]),n[20]||(n[20]=p(`<p>直接写在 <code>config</code> 里虽说并没有谁会盗用（吧 😃），但显然不太安全。这是原 workflow 文件中下面这段启发了我。其他的变量难道也可以这样传到服务器上？</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code><span class="line"><span class="token key atrule">with</span><span class="token punctuation">:</span></span>
<span class="line">  <span class="token key atrule">ACCESS_TOKEN</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.ACCESS_TOKEN <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法"><span>解决方法</span></a></h3><p>果然 <code>Github</code> 早就帮我们想好了解决办法。</p>`,4)),s("ul",null,[s("li",null,[s("a",d,[n[7]||(n[7]=a("Creating and storing encrypted secrets")),t(e)])])]),n[21]||(n[21]=p(`<p>简单说就是在对应 repo 的 <code>Secrets</code> 区域里输入。</p><p><img src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/470919/6d81c510-7f25-a039-5087-f07854d6d75e.png" alt="Screenshot 2020-03-23 13.08.05.png"></p><p><strong>注意⚠️</strong>：上图中画圈的位置的 <code>A</code>, 正确的英语语法是 <code>AN</code>, 不过这篇教程统一用 <code>A</code>, 和下面的</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">\${{ secrets.THIS_IS_A_EXAMPLE }}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>也得一致!</p><p><s>英语好的朋友别嘲讽在下 😵</s></p><p>再在 <code>actions</code> 里用</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">\${{ secrets.YOURKEY }}</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>去取，通过 <code>env</code> 存入服务器的环境变量。就可以用啦 👻。</p><p>做个实验。<code>main.yaml</code> 里加上这样一段。</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code><span class="line"><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Pass Variables</span>
<span class="line highlighted">  <span class="token key atrule">env</span><span class="token punctuation">:</span></span>
<span class="line highlighted">    <span class="token key atrule">EXAMPLE</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.THIS_IS_A_EXAMPLE <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line highlighted">    <span class="token key atrule">NOTEXIST</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.NOT_EXIST <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token key atrule">run</span><span class="token punctuation">:</span> echo &#39;try to show secret 😉&#39; <span class="token important">&amp;&amp;</span> echo $EXAMPLE <span class="token important">&amp;&amp;</span> echo $NOT_EXIST</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出下图这样的结果。github 把结果加密了，不过可以发现，有设置的 <code>THIS_IS_A_EXAMPLE</code> 和没有设置的 <code>NOT_EXIST</code>，<code>echo</code> 出来是不一样的。由此可见，已经设置成功了。</p><p><img src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/470919/e72b8478-89cb-6f45-f406-e6938f81e1c7.png" alt="Screenshot 2020-03-23 13.11.39.png"></p><h3 id="实施" tabindex="-1"><a class="header-anchor" href="#实施"><span>实施</span></a></h3><p>直接试试吧。</p><div class="language-yaml line-numbers-mode" data-highlighter="prismjs" data-ext="yml"><pre><code><span class="line"><span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build</span>
<span class="line">  <span class="token key atrule">env</span><span class="token punctuation">:</span></span>
<span class="line">    <span class="token key atrule">VSSUEID</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.VSSUEID <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token key atrule">VSSUESECRET</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.VSSUESECRET <span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token key atrule">run</span><span class="token punctuation">:</span> npm install <span class="token important">&amp;&amp;</span> npm run build</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>npm run build</code> 之前加上环境参数那一段。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">  <span class="token literal-property property">vssueConfig</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">platform</span><span class="token operator">:</span> <span class="token string">&#39;github&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">owner</span><span class="token operator">:</span> <span class="token string">&#39;xyyolab&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">repo</span><span class="token operator">:</span> <span class="token string">&#39;blog&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">clientId</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VSSUEID</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">clientSecret</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">VSSUESECRET</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再在 <code>config</code> 内用 node 的语法去环境参数取就 OK 啦！</p><p>结果是评论功能可以使用了呀 😍。</p><p><img src="https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/470919/0a508150-59e8-948c-4601-b57012db2ed6.png" alt="Screenshot 2020-03-23 13.36.35.png"></p>`,21)),s("ul",null,[s("li",null,[n[9]||(n[9]=a("完整的 ")),n[10]||(n[10]=s("code",null,"main.yaml",-1)),n[11]||(n[11]=a(" 请参考我的 ")),s("a",m,[n[8]||(n[8]=a("Github")),t(e)])])]),n[22]||(n[22]=s("p",null,"看起来一个小步骤但解决了大问题呢 💃。",-1)),n[23]||(n[23]=s("hr",null,null,-1)),s("div",k,[n[17]||(n[17]=p('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">提示</p>',2)),s("p",null,[n[14]||(n[14]=a("本文作者 ")),s("a",g,[n[12]||(n[12]=a("xyh 🐸")),t(e)]),n[15]||(n[15]=a("，博客 ")),s("a",b,[n[13]||(n[13]=a("xyh 🐸")),t(e)]),n[16]||(n[16]=a("。"))])])])}const E=l(c,[["render",v]]),S=JSON.parse('{"path":"/blogs/github-actions-secret-key.html","title":"如何在 GitHub Actions 时使用 secretKey","lang":"zh-CN","frontmatter":{"title":"如何在 GitHub Actions 时使用 secretKey","date":"2020-03-20T00:00:00.000Z","author":"xyh 🐸","tags":["Github Actions","Secret Key"],"categories":["blog"]},"headers":[{"level":2,"title":"如何在 GitHub Actions 时使用 secretKey","slug":"如何在-github-actions-时使用-secretkey","link":"#如何在-github-actions-时使用-secretkey","children":[{"level":3,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":3,"title":"解决方法","slug":"解决方法","link":"#解决方法","children":[]},{"level":3,"title":"实施","slug":"实施","link":"#实施","children":[]}]}],"git":{"createdTime":1747990935000,"updatedTime":1747990935000,"contributors":[{"name":"三人","username":"","email":"stwangcq@163.com","commits":1}]},"filePathRelative":"blogs/github-actions-secret-key.md"}');export{E as comp,S as data};
